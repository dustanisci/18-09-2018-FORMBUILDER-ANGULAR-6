{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/component/input-checkbox/input-checkbox.component.ts","webpack:///src/app/shared/component/input-checkbox/input-checkbox.component.html","webpack:///src/app/shared/component/msg/msg.component.ts","webpack:///src/app/shared/component/msg/msg.component.html","webpack:///src/app/shared/mocky/candy.ts","webpack:///src/app/shared/model/error-msg.ts","webpack:///src/app/shared/reactive-forms/validate-checkbox.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","fb","error","actionSave","form","group","name","required","minLength","maxLength","age","color","candy","jobs","controlName","field","get","errors","minlength","requiredLength","maxlength","fieldBr","Object","value","validate","valid","setTimeout","send","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","InputCheckboxComponent","onChangeCb","onTouchedCb","checkboxes","fn","checked","map","res","provide","useExisting","multi","selectOrDeselect","MsgComponent","label","ErrorMsg","validateCheckbox","control","counter","length","environment","production","bootstrapModule","catch","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { ErrorMsg } from './shared/model/error-msg';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { candy } from './shared/mocky/candy';\r\nimport { validateCheckbox } from './shared/reactive-forms/validate-checkbox';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n\r\n  public error: ErrorMsg = new ErrorMsg();\r\n  public actionSave = false;\r\n\r\n  public form: FormGroup = this.fb.group({\r\n    name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100)]],\r\n    age: [65, []],\r\n    color: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20)]],\r\n    candy: [candy, [validateCheckbox]],\r\n    jobs: ['', [Validators.required, Validators.minLength(10)]]\r\n  });\r\n\r\n  constructor(private fb: FormBuilder) { }\r\n\r\n  public validate(controlName: string, field: string) {\r\n    if (this.form.get(controlName).errors && this.form.get(controlName).errors.required) {\r\n      this.error[controlName] = `${field} é um campo obrigatório`;\r\n    } else if (this.form.get(controlName).errors && this.form.get(controlName).errors.minlength) {\r\n      this.error[controlName] = `${field} é no mínimo ${this.form.get(controlName).errors.minlength.requiredLength} caracteres`;\r\n    } else if (this.form.get(controlName).errors && this.form.get(controlName).errors.maxlength) {\r\n      this.error[controlName] = `${field} é no mínimo ${this.form.get(controlName).errors.maxlength.requiredLength} caracteres`;\r\n    }\r\n  }\r\n\r\n  public send(): void {\r\n    this.error = new ErrorMsg();\r\n\r\n    let fieldBr: string;\r\n    for (const field of Object.keys(this.form.value)) {\r\n\r\n      switch (field) {\r\n        case 'name': {\r\n          fieldBr = 'Nome';\r\n          break;\r\n        }\r\n\r\n        case 'color': {\r\n          fieldBr = 'Cor';\r\n          break;\r\n        }\r\n\r\n        case 'candy': {\r\n          fieldBr = 'Doce';\r\n          break;\r\n        }\r\n\r\n        case 'jobs': {\r\n          fieldBr = 'Jobs';\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.validate(field, fieldBr);\r\n    }\r\n\r\n\r\n    if (this.form.valid) {\r\n      this.actionSave = true;\r\n      setTimeout(() => this.actionSave = false, 1000);\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","<form class=\"container-fluid\" [formGroup]=\"form\" (ngSubmit)=\"send()\">\r\n  <div class=\"container\">\r\n    <label for=\"name\">Nome</label>\r\n    <input id=\"name\" type=\"text\" formControlName=\"name\" />\r\n    <app-msg *ngIf=\"error.name\" [type]=\"1\" [msg]=\"error.name\"></app-msg>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <label>Idade</label>\r\n    <input type=\"range\" min=\"18\" max=\"130\" formControlName=\"age\">\r\n    <strong>{{ form.get('age').value + ' anos' }}</strong>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <label for=\"inputColor\">Cor favorita</label>\r\n\r\n    <input id=\"inputColor\" list=\"color\" formControlName=\"color\" />\r\n    <datalist id=\"color\">\r\n      <option value=\"Azul\">\r\n      <option value=\"Laranja\">\r\n      <option value=\"Preto\">\r\n    </datalist>\r\n    <app-msg *ngIf=\"error.color\" [type]=\"1\" [msg]=\"error.color\"></app-msg>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <label>Doces favoritos</label>\r\n    <app-input-checkbox formControlName=\"candy\"></app-input-checkbox>\r\n    <app-msg *ngIf=\"error.candy\" [type]=\"1\" [msg]=\"error.candy\"></app-msg>\r\n  </div>\r\n\r\n  <div class=\"container\">\r\n    <label for=\"jobs\">Jobs</label>\r\n    <textarea id=\"jobs\" rows=\"4\" cols=\"50\" formControlName=\"jobs\"></textarea>\r\n    <app-msg *ngIf=\"error.jobs\" [type]=\"1\" [msg]=\"error.jobs\"></app-msg>\r\n  </div>\r\n\r\n\r\n  <div class=\"container\">\r\n    <input type=\"submit\" value=\"enviar\" [disabled]=\"actionSave\" />\r\n    <app-msg class=\"saved\" [ngClass]=\"{ 'successfully' : actionSave === true }\" [type]=\"2\"\r\n      [msg]=\"'Salvado com sucesso!'\"></app-msg>\r\n  </div>\r\n</form>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { MsgComponent } from './shared/component/msg/msg.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { InputCheckboxComponent } from './shared/component/input-checkbox/input-checkbox.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MsgComponent,\r\n    InputCheckboxComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, forwardRef } from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { InputCheckbox } from '../../model/input-check-box';\r\n\r\n@Component({\r\n  selector: 'app-input-checkbox',\r\n  templateUrl: './input-checkbox.component.html',\r\n  styleUrls: ['./input-checkbox.component.scss'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => InputCheckboxComponent),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class InputCheckboxComponent implements ControlValueAccessor {\r\n\r\n  @Input()\r\n  public error: boolean;\r\n\r\n  public checkboxes: InputCheckbox[];\r\n  public onChangeCb: (checkboxes: InputCheckbox[]) => void = () => { };\r\n  public onTouchedCb: (checkboxes: InputCheckbox[]) => void = () => { };\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public writeValue(checkboxes: InputCheckbox[]): void {\r\n    this.checkboxes = checkboxes;\r\n  }\r\n\r\n  public registerOnChange(fn: any): void {\r\n    this.onChangeCb = fn;\r\n    this.error = false;\r\n  }\r\n\r\n  public registerOnTouched(fn: any): void {\r\n    this.onTouchedCb = fn;\r\n  }\r\n\r\n  public setChecked(value: string | number, checked: boolean): void {\r\n    this.checkboxes.map(res => {\r\n      if (res.value === value) {\r\n        res.checked = checked;\r\n      }\r\n    });\r\n    this.error = false;\r\n    this.onChangeCb(this.checkboxes);\r\n  }\r\n\r\n  public selectOrDeselect(checked: boolean): void {\r\n    this.checkboxes.map(res => {\r\n      res.checked = checked;\r\n    });\r\n    this.onChangeCb(this.checkboxes);\r\n  }\r\n\r\n}\r\n","<ng-container *ngFor=\"let checkbox of checkboxes\">\r\n  <div class=\"container\">\r\n    <input type=\"checkbox\" [ngClass]=\"{'invalid': error}\" #selectedCheckbox\r\n      (click)=\"setChecked(checkbox.value, selectedCheckbox.checked)\" [id]=\"checkbox.value\" [value]=\"checkbox.value\"\r\n      [checked]=\"checkbox.checked\">\r\n    <label [for]=\"checkbox.value\">{{ checkbox.label }}</label>\r\n  </div>\r\n</ng-container>\r\n\r\n<div class=\"container-options\">\r\n  <label (click)=\"selectOrDeselect(true)\">Marcar todos</label>\r\n  <label (click)=\"selectOrDeselect(false)\">Desmarcar todos</label>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Type } from '../../enum/type';\r\n\r\n@Component({\r\n  selector: 'app-msg',\r\n  templateUrl: './msg.component.html',\r\n  styleUrls: ['./msg.component.scss']\r\n})\r\n\r\nexport class MsgComponent implements OnInit {\r\n\r\n  @Input() msg: string;\r\n  @Input() type: Type;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<label [ngClass]=\"{'info' : type === 0, 'error' : type === 1, 'success' : type === 2}\">{{ msg }}</label>","import { InputCheckbox } from '../model/input-check-box';\r\n\r\nexport const candy: InputCheckbox[] = [\r\n  { label: 'Brigadeiro', value: 'brigadeiro', checked: false },\r\n  { label: 'Wafer c/ doce de leite', value: 'wafer', checked: false },\r\n  { label: 'Torta de morango', value: 'pie', checked: false },\r\n  { label: 'Bomba de Chocolate', value: 'bombaChocolate', checked: false }\r\n];\r\n","export class ErrorMsg {\r\n  name: string;\r\n  color: string;\r\n  candy: string;\r\n  jobs: string;\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nexport function validateCheckbox(control: AbstractControl) {\r\n  let counter = 0;\r\n  control.value.map(res => {\r\n    if (res.checked === false) {\r\n      counter++;\r\n    }\r\n  });\r\n  return counter === control.value.length ? { required: true } : null;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}